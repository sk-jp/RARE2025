General:
    project: RARE2025
    seed: 1234
    accelerator: gpu    # cpu, gpu
    precision: bf16    # 16, 32, bf16
    strategy: ddp    # ddp, fsdp
    num_nodes: 1
#    gpus: 1
#    gpus: [0, 1, 2, 3]
    epoch: &epoch 200
    check_val_every_n_epoch: 1
    debug: False
    lr_tune: False
    mode: train

Data:
    dataset:
        top_dir: /data/MICCAI2025_RARE/
        train_datalist: datalist/train_datalist_classification.csv
        valid_datalist: datalist/valid_datalist_classification.csv
        predict_datalist: datalist/valid_datalist_classification.csv
        num_classes: &num_classes 2
    dataloader:
        train:
            batch_size: 64
            num_workers: 4
            shuffle: True
        valid:
            batch_size: 64
            num_workers: 4
            shuffle: False
        predict:
            batch_size: 64
            num_workers: 4
            shuffle: False

Model:
    arch: convnext
    params:
#        model_name: convnext_small.fb_in22k_ft_in1k
        model_name: convnext_base.fb_in22k_ft_in1k
        pretrained: True
        in_channels: 3
        num_classes: *num_classes
        freeze_stem: False
    pretrained: None

Optimizer:
    optimizer:
        name: AdamW
        params:
            lr: !!python/float 5e-5
            weight_decay: !!python/float 1e-5
    lr_scheduler:
        name: CosineAnnealingLR
        params:
            T_max: *epoch
    accumulate_grad_batches: 1

Loss:
    lossfun_keys: [focal]
    lossfun_weights: [1.0]
    ce:
        lossfun: CrossEntropyLoss
        params:
            weight: [1.0, 100.0]
            reduction: mean
    focal:
        lossfun: FocalLoss
        params:
            alpha: 0.9
            gamma: 2.0
            to_onehot_y: True
            reduction: mean

Transform:
    mean: &mean [0.485, 0.456, 0.406]
    std: &std [0.229, 0.224, 0.225]
    max_pixel_value: &max_pixel_value 255.0
    image_size: &image_size 224
    valid_tta: True
    train:
        # Resize
        - name: Resize
          params:
            width: *image_size
            height: *image_size
            interpolation: 2  # cv2.INTER_CUBIC
        # Flip
        - name: HorizontalFlip
          params:
            p: 0.5
        # Flip
        - name: VerticalFlip
          params:
            p: 0.5
        # Rotate (0, 90, 180, 270 degrees)
        - name: RandomRotate90
          params:
            p: 1.0
        # ShiftScaleRotate
        - name: ShiftScaleRotate
          params:
            shift_limit: [-0.02, 0.02]
            scale_limit: [-0.02, 0.02]
            rotate_limit: [-2, 2]
            p: 0.5
        # Normalize
        - name: Normalize
          params:
            mean: *mean
            std: *std
            max_pixel_value: *max_pixel_value
    valid:
        # Resize
        - name: Resize
          params:
            width: *image_size
            height: *image_size
            interpolation: 2  # cv2.INTER_CUBIC
        # Normalize
        - name: Normalize
          params:
            mean: *mean
            std: *std
            max_pixel_value: *max_pixel_value
    test:
        # Resize
        - name: Resize
          params:
            width: *image_size
            height: *image_size
            interpolation: 2  # cv2.INTER_CUBIC
        # Normalize
        - name: Normalize
          params:
            mean: *mean
            std: *std
            max_pixel_value: *max_pixel_value

Tuner:
    min_lr: !!python/float 1e-6
    max_lr: !!python/float 1e-1
    num_training: 100

Earlystop:
    monitor: valid_loss
    patience: 200
    mode: min
    verbose: False
